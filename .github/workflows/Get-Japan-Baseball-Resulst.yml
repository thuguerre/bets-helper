name: Get Japan BaseBall Results

on:
  schedule:
    - cron: '20 14-21 * * *'

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest requests gspread oauth2client python-decouple pymongo dnspython
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Execute
      id: execute
      env:
          SA_PROJECT_ID: ${{ secrets.SA_PROJECT_ID }}
          SA_PRIVATE_KEY_ID: ${{ secrets.SA_PRIVATE_KEY_ID }}
          SA_PRIVATE_KEY: ${{ secrets.SA_PRIVATE_KEY }}
          SA_CLIENT_EMAIL: ${{ secrets.SA_CLIENT_EMAIL }}
          SA_CLIENT_ID: ${{ secrets.SA_CLIENT_ID }}
          SA_CLIENT_X509_CERT_URL: ${{ secrets.SA_CLIENT_X509_CERT_URL }}
          MONGODB_USER: ${{ secrets.MONGODB_USER }}
          MONGODB_PWD: ${{ secrets.MONGODB_PWD }}
          MONGODB_NAME: ${{ secrets.MONGODB_NAME }}
      run: |
        result=$(python main.py from:complete_spreadsheet upload_spreadsheet:yes upload_mongodb:yes)
        echo "::set-output name=JPN_BASEBALL_SCRIPT_RESULT::$result"

    - name: Notify results are ready
      uses: "hugoalh/GitHubAction.SendToIFTTT@v3.1.2"
      if: ${{ contains(steps.execute.outputs.JPN_BASEBALL_SCRIPT_RESULT, 'RESULTS_UPDATED') }}
      with:
        webhook_eventname: "JPNBaseBallResultsReady"
        webhook_key: "${{secrets.IFTTT_WEBHOOK_KEY}}"
